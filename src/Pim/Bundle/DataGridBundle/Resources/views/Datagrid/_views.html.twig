{% import 'PimUIBundle:Default:page_elements.html.twig' as elements %}

{% macro viewLabel(view, showModified) %}
    {% if showModified %}
        {{- view.modified ? '* ' : '' -}}
    {% endif %}
    {% if view.default %}
        {{- 'datagrid_view.default'|trans -}}
    {% elseif view.custom %}
        {{- 'datagrid_view.custom'|trans -}}
    {% else %}
        {{- view.label -}}
    {% endif %}
{% endmacro %}

<select id="view-selector" class="hide">
{% for view in views %}
    <option value="{{ view.id }}" data-filters="{{ view.filters }}" data-columns="{{ view.columns|join(',') }}">
        {{ _self.viewLabel(view) }}
    </option>
{% endfor %}
</select>

{% if not activeView.default and activeView.owner.id == app.user.id %}
    <a class="muted" {{ elements.deleteLinkAttributes(
        path('pim_datagrid_view_remove', { id: activeView.id, dataLocale: dataLocale }),
        path('pim_enrich_product_index', { dataLocale: dataLocale }),
        'confirmation.remove.datagrid view'|trans({'%name%': activeView.label}),
        'flash.datagrid view.removed'|trans
    ) }}>
        <i class="icon-trash" data-toggle="tooltip" data-placement="right" data-original-title="{{ 'datagrid_view.remove'|trans }}"></i>
    </a>
{% endif %}

{{ form_start(form, {
    action: path('pim_datagrid_view_index', { alias: alias, dataLocale: dataLocale, gridView: activeView.id }),
    attr: { class: 'pull-left unspaced hide' }
}) }}
    {{ form_widget(form.label,  { attr: { class: 'input-medium input-invisible', placeholder: 'datagrid_view.placeholder'|trans } }) }}
    {{ form_widget(form.filters) }}
{{ form_end(form) }}

<script type="text/javascript">
require(
    ['jquery', 'backbone', 'routing', 'oro/mediator', 'pim/datagrid/state', 'jquery.multiselect', 'jquery.multiselect.filter'],
    function ($, Backbone, Routing, mediator, DatagridState) {
        'use strict';

        var $selector = $('#view-selector');

        var opts = {
            title: '{{ _self.viewLabel(activeView) }}',
            placeholder: '{{ 'Search'|trans }}',
            header: '',
            height: 175,
            minWidth: 225,
            classes: 'pimmultiselect',
            position: {
                my: 'right top',
                at: 'right bottom',
                collision: 'none'
            }
        };
        opts.selectedText = opts.noneSelectedText = '{{ _self.viewLabel(activeView, true) }}';

        $selector.multiselect(opts).multiselectfilter({
            label: false,
            placeholder: opts.placeholder
        });

        mediator.once('hash_navigation_request:start', function() {
            $selector.multiselect('destroy').hide();
        });

        var $menu = $('.ui-multiselect-menu.pimmultiselect').addClass('highlight-hover').appendTo($('#container'));
        $menu.find('input[type=checkbox]').addClass('hide');

        var $footerContainer = $('<div>').addClass('ui-multiselect-footer pull-left fullwidth').css({
            'background-color': '#f6f6f6'
        }).appendTo($menu);
        $('#{{ form.vars.id }}').appendTo($footerContainer).removeClass('hide').find('input[type=text]').css({
            'margin-top': '3px',
            'margin-left': '5px'
        });
        var $saveButton = $('<button>').addClass('btn btn-small btn-primary pull-right').css({
            'margin': '5px'
        }).html('{{ 'datagrid_view.create'|trans }}').on('click', function () {
            if (!$('#{{ form.label.vars.id }}').val()) {
                return;
            }
            $('#{{ form.filters.vars.id }}').val(DatagridState.get('{{ alias }}', 'filters'));
            $selector.multiselect('close');
            $('#{{ form.vars.id }}').submit()
        }).appendTo($footerContainer);


        var $openButton = $('button.pimmultiselect').addClass('btn btn-group').css({
            'margin-top': '-6px',
            'margin-left': '10px'
        }).prepend($('<span>', { 'text': '{{ 'Views'|trans }}', 'class': 'pull-left buffer-small-right' }).css({
            'margin-right': '10px',
            'border-right': '1px solid #ccc'
        }));
        $openButton.append($('<span>', { 'class': 'caret pull-right' }));

        $menu.on('click', 'li', function() {
            var label = $(this).text().trim();
            $selector.multiselect({
                selectedText: label,
                noneSelectedText: label
            });
            var gridViewId = $(this).find('input').val();

            var $viewItem = $selector.find('option[value="' + gridViewId + '"]');
            DatagridState.set('{{ alias }}', { 'view': gridViewId, 'filters': $viewItem.data('filters'), 'columns': $viewItem.data('columns') });

            console.log('view set to', gridViewId);
            Backbone.history.navigate(window.location.hash + '&v=' + gridViewId, true);
        });

        $menu.find('input[type="search"]').width(207);

        $('#{{ form.label.vars.id }}').on('keypress', function(e) {
            if ((e.keyCode || e.which) == 13) {
                e.preventDefault();
                $saveButton.trigger('click');
            }
        });
    }
);
</script>
